name: Build and Release for All Platforms

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.1)'
        required: true
        default: 'v1.0.7'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-
          
      - name: Build JAR
        run: mvn clean package -DskipTests
        
      - name: Build Windows Portable (.exe)
        run: |
          jpackage --input target --dest dist --name "GOVNO-Screamer" --main-jar govnoscreamer-widget-1.0.0.jar --main-class com.dayab.widget.Launcher --type app-image --app-version 1.0.0 --vendor "rawscript" --description "GOVNO/TON Crypto Screamer Widget" --copyright "© 2025 rawscript" --java-options "-Dfile.encoding=UTF-8" --java-options "-Djava.awt.headless=false"
          
      - name: Build Windows MSI Installer
        run: |
          jpackage --input target --dest dist --name "GOVNO-Screamer-Installer" --main-jar govnoscreamer-widget-1.0.0.jar --main-class com.dayab.widget.Launcher --type msi --app-version 1.0.0 --vendor "rawscript" --description "GOVNO/TON Crypto Screamer Widget" --copyright "© 2025 rawscript" --win-menu --win-shortcut --win-dir-chooser --java-options "-Dfile.encoding=UTF-8" --java-options "-Djava.awt.headless=false"
          
      - name: Create Windows ZIP archive
        run: |
          cd dist
          powershell Compress-Archive -Path "GOVNO-Screamer" -DestinationPath "GOVNO-Screamer-Windows-Portable.zip"
          
      - name: Copy Universal JAR
        run: |
          copy target\govnoscreamer-widget-1.0.0.jar dist\GOVNO-Screamer-Universal.jar
          
      - name: Upload Windows Portable
        uses: actions/upload-artifact@v4
        with:
          name: windows-portable
          path: dist/GOVNO-Screamer-Windows-Portable.zip
          
      - name: Upload Windows MSI
        uses: actions/upload-artifact@v4
        with:
          name: windows-msi
          path: dist/*.msi
          
      - name: Upload Universal JAR
        uses: actions/upload-artifact@v4
        with:
          name: universal-jar
          path: dist/GOVNO-Screamer-Universal.jar

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y fuse desktop-file-utils
          
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-
          
      - name: Build JAR
        run: mvn clean package -DskipTests
        
      - name: Build Linux app-image
        run: |
          jpackage --input target --dest dist --name "GOVNO-Screamer" --main-jar govnoscreamer-widget-1.0.0.jar --main-class com.dayab.widget.Launcher --type app-image --app-version 1.0.0 --vendor "rawscript" --description "GOVNO/TON Crypto Screamer Widget" --copyright "© 2025 rawscript" --java-options "-Dfile.encoding=UTF-8" --java-options "-Djava.awt.headless=false"
          
      - name: Build Linux deb
        run: |
          jpackage --input target --dest dist --name "GOVNO-Screamer" --main-jar govnoscreamer-widget-1.0.0.jar --main-class com.dayab.widget.Launcher --type deb --app-version 1.0.0 --vendor "rawscript" --description "GOVNO/TON Crypto Screamer Widget" --copyright "© 2025 rawscript" --linux-shortcut --linux-menu-group "Office" --linux-package-name govno-screamer --java-options "-Dfile.encoding=UTF-8" --java-options "-Djava.awt.headless=false"
          
      - name: Create Linux Archive
        run: |
          cd dist
          tar -czf GOVNO-Screamer-Linux-x64.tar.gz GOVNO-Screamer/
          
      - name: Download and setup AppImageTool
        run: |
          wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool
          
      - name: Create AppImage
        run: |
          # Директория, созданная jpackage (--type app-image)
          JPACKAGE_APP_DIR="dist/GOVNO-Screamer"

          # Наша AppDir, куда мы будем собирать все для appimagetool
          APPIMAGE_DIR="dist/GOVNO-Screamer.AppDir"
          mkdir -p "${APPIMAGE_DIR}"

          # Копируем все из jpackage-вывода в корень AppDir
          # Это скопирует bin/, lib/ и т.д. внутрь APPIMAGE_DIR
          cp -a "${JPACKAGE_APP_DIR}/." "${APPIMAGE_DIR}/" 
          
          # Имя, указанное в jpackage --name
          EXECUTABLE_NAME="GOVNO-Screamer" 
          # Предполагаемый относительный путь к исполняемому файлу внутри AppDir после копирования
          EXECUTABLE_PATH_IN_APPDIR="bin/${EXECUTABLE_NAME}"

          # Создаем .desktop файл в корне AppDir
          # Имя .desktop файла должно совпадать с Icon и именем приложения для лучшей интеграции
          cat > "${APPIMAGE_DIR}/${EXECUTABLE_NAME}.desktop" << EOF
          [Desktop Entry]
          Name=GOVNO Screamer
          Comment=GOVNO/TON Crypto Screamer Widget
          Exec=${EXECUTABLE_PATH_IN_APPDIR}
          Icon=${EXECUTABLE_NAME}
          Type=Application
          Categories=Office;Finance;
          Terminal=false
          EOF
          
          # Устанавливаем права на .desktop файл
          chmod +x "${APPIMAGE_DIR}/${EXECUTABLE_NAME}.desktop"

          # Устанавливаем права на сам исполняемый файл внутри AppDir
          if [ -f "${APPIMAGE_DIR}/${EXECUTABLE_PATH_IN_APPDIR}" ]; then
            chmod +x "${APPIMAGE_DIR}/${EXECUTABLE_PATH_IN_APPDIR}"
          else
            echo "Ошибка: Исполняемый файл не найден по пути ${APPIMAGE_DIR}/${EXECUTABLE_PATH_IN_APPDIR}"
            # Попробуем найти исполняемый файл, если он не в bin/
            # jpackage для app-image может помещать исполняемый файл прямо в корень созданной директории
            ALT_EXECUTABLE_PATH_IN_APPDIR="${EXECUTABLE_NAME}"
            if [ -f "${APPIMAGE_DIR}/${ALT_EXECUTABLE_PATH_IN_APPDIR}" ]; then
                echo "Найден альтернативный исполняемый файл: ${APPIMAGE_DIR}/${ALT_EXECUTABLE_PATH_IN_APPDIR}"
                # Обновляем Exec в .desktop файле
                sed -i "s|Exec=.*|Exec=${ALT_EXECUTABLE_PATH_IN_APPDIR}|" "${APPIMAGE_DIR}/${EXECUTABLE_NAME}.desktop"
                chmod +x "${APPIMAGE_DIR}/${ALT_EXECUTABLE_PATH_IN_APPDIR}"
                echo "Права установлены для ${APPIMAGE_DIR}/${ALT_EXECUTABLE_PATH_IN_APPDIR} и .desktop файл обновлен."
            else
                echo "Альтернативный исполняемый файл также не найден: ${APPIMAGE_DIR}/${ALT_EXECUTABLE_PATH_IN_APPDIR}"
                ls -R "${APPIMAGE_DIR}" # Выводим структуру для отладки
                exit 1
            fi
          fi

          # Копируем иконку в корень AppDir
          # Убедись, что иконка существует по одному из этих путей в твоем репозитории
          ICON_SOURCE_PATH_PRIMARY="src/main/resources/icons/${EXECUTABLE_NAME}.png" # e.g., GOVNO-Screamer.png
          ICON_SOURCE_PATH_ALTERNATIVE="src/main/resources/icons/app-icon.png"    # Generic name
          ICON_DEST_PATH="${APPIMAGE_DIR}/${EXECUTABLE_NAME}.png"             # e.g., APPIMAGE_DIR/GOVNO-Screamer.png

          if [ -f "${ICON_SOURCE_PATH_PRIMARY}" ]; then
            cp "${ICON_SOURCE_PATH_PRIMARY}" "${ICON_DEST_PATH}"
            echo "Иконка скопирована из ${ICON_SOURCE_PATH_PRIMARY} в ${ICON_DEST_PATH}"
          elif [ -f "${ICON_SOURCE_PATH_ALTERNATIVE}" ]; then
            cp "${ICON_SOURCE_PATH_ALTERNATIVE}" "${ICON_DEST_PATH}"
            echo "Иконка скопирована из ${ICON_SOURCE_PATH_ALTERNATIVE} в ${ICON_DEST_PATH}"
          else
            echo "ПРЕДУПРЕЖДЕНИЕ: Файл иконки не найден ни по пути '${ICON_SOURCE_PATH_PRIMARY}', ни по '${ICON_SOURCE_PATH_ALTERNATIVE}'."
            echo "AppImage будет создан без иконки или с иконкой по умолчанию от appimagetool."
            # Если иконка обязательна для сборки, раскомментируй следующую строку:
            # exit 1
          fi

          # Создаем AppImage
          ARCH=x86_64 ./appimagetool "${APPIMAGE_DIR}" "dist/${EXECUTABLE_NAME}-Linux-x86_64.AppImage"
          
      - name: Upload Linux Archive
        uses: actions/upload-artifact@v4
        with:
          name: linux-archive
          path: dist/GOVNO-Screamer-Linux-x64.tar.gz
          
      - name: Upload Linux AppImage
        uses: actions/upload-artifact@v4
        with:
          name: linux-appimage
          path: dist/GOVNO-Screamer-Linux-x86_64.AppImage
          
      - name: Upload Linux Deb
        uses: actions/upload-artifact@v4
        with:
          name: linux-deb
          path: dist/*.deb

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-
          
      - name: Build JAR
        run: mvn clean package -DskipTests
        
      - name: Build macOS app-image
        run: |
          jpackage --input target --dest dist --name "GOVNO-Screamer" --main-jar govnoscreamer-widget-1.0.0.jar --main-class com.dayab.widget.Launcher --type app-image --app-version 1.0.0 --vendor "rawscript" --description "GOVNO/TON Crypto Screamer Widget" --copyright "© 2025 rawscript" --mac-package-name "GOVNO Screamer" --java-options "-Dfile.encoding=UTF-8" --java-options "-Djava.awt.headless=false"
          
      - name: Create macOS Archive
        run: |
          cd dist
          tar -czf GOVNO-Screamer-macOS-x64.tar.gz GOVNO-Screamer.app/
        
      - name: Build macOS DMG
        run: |
          jpackage --input target --dest dist --name "GOVNO-Screamer-Installer" --main-jar govnoscreamer-widget-1.0.0.jar --main-class com.dayab.widget.Launcher --type dmg --app-version 1.0.0 --vendor "rawscript" --description "GOVNO/TON Crypto Screamer Widget" --copyright "© 2025 rawscript" --mac-package-name "GOVNO Screamer" --java-options "-Dfile.encoding=UTF-8" --java-options "-Djava.awt.headless=false"
          
      - name: Upload macOS Archive
        uses: actions/upload-artifact@v4
        with:
          name: macos-archive
          path: dist/GOVNO-Screamer-macOS-x64.tar.gz
          
      - name: Upload macOS DMG
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: dist/*.dmg

  release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          
      - name: Create Release Notes
        run: |
          cat > release_notes.md << EOF
          # GOVNO/TON Crypto Screamer Widget - Release ${{ github.ref_name }}
          
          ## Готовые к использованию файлы:
          
          ### 🖥️ Windows (рекомендуется)
          - **GOVNO-Screamer-Installer-${{ github.ref_name }}.msi** - MSI установщик с автоматической установкой
          - **GOVNO-Screamer-Windows-Portable-${{ github.ref_name }}.zip** - Портативная версия (не требует установки)
          
          ### 🐧 Linux
          - **govno-screamer-${{ github.ref_name }}_amd64.deb** - DEB пакет для Debian/Ubuntu
          - **GOVNO-Screamer-Linux-x86_64-${{ github.ref_name }}.AppImage** - Универсальный AppImage (chmod +x и запускай)
          - **GOVNO-Screamer-Linux-x64-${{ github.ref_name }}.tar.gz** - Архив с исполняемыми файлами
          
          ### 🍎 macOS
          - **GOVNO-Screamer-Installer-${{ github.ref_name }}.dmg** - DMG установщик для macOS
          - **GOVNO-Screamer-macOS-x64-${{ github.ref_name }}.tar.gz** - Архив с .app файлом
          
          ### ☕ Универсальная версия (любая ОС с Java)
          - **GOVNO-Screamer-Universal-${{ github.ref_name }}.jar** - Требует Java 8+ (java -jar GOVNO-Screamer-Universal.jar)
          
          ## Как запустить:
          1. **Windows**: Скачайте .msi или распакуйте .zip
          2. **Linux**: Скачайте .AppImage, сделайте исполняемым (chmod +x) и запустите
          3. **macOS**: Скачайте .dmg или распакуйте .tar.gz
          4. **Любая ОС**: Установите Java и запустите .jar файл
          
          ## Возможности:
          - 🕒 Реальное время и дата
          - 📊 Анимированная полоса прогресса
          - 🎨 Современный дизайн с градиентами
          - 📌 Всегда поверх других окон
          - 🖱️ Перетаскивание мышью
          - 💾 Системный трей
          - ⚙️ Интерактивные кнопки
          EOF
          
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.msi
            *.zip
            *.tar.gz
            *.AppImage
            *.deb
            *.dmg
            *.jar
          body_path: release_notes.md
          draft: false
          prerelease: false
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}